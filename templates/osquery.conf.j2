{
  // https://osquery.readthedocs.io/en/stable/deployment/configuration/
  // Configure the daemon below:
  "options": {
    // Select the osquery config plugin.
    "config_plugin": "{{ config_plugin }}",

    // Select the osquery logging plugin.
    "logger_plugin": "{{ logger_plugin }}",

    // The log directory stores info, warning, and errors.
    // If the daemon uses the 'filesystem' logging retriever then the log_dir
    // will also contain the query results.
    "logger_path": "{{ logger_path }}",

    // Set 'disable_logging' to true to prevent writing any info, warning, error
    // logs. If a logging plugin is selected it will still write query results.
    "disable_logging": "{{ disable_logging }}",

    // Splay the scheduled interval for queries.
    // This is very helpful to prevent system performance impact when scheduling
    // large numbers of queries that run a smaller or similar intervals.
    "schedule_splay_percent": "{{ schedule_splay_percent }}",

    // Write the pid of the osqueryd process to a pidfile/mutex.
    "pidfile": "{{ pidfile }}",

    // Clear events from the osquery backing store after a number of seconds.
    "events_expiry": "{{ events_expiry }}",

    // A filesystem path for disk-based backing storage used for events and
    // query results differentials. See also 'use_in_memory_database'.
    "database_path": "{{ database_path }}",

    // Comma-delimited list of table names to be disabled.
    // This allows osquery to be launched without certain tables.
    "disable_tables": "{{ disable_tables }}",

    // Enable debug or verbose debug output when logging.
    "verbose": "{{ verbose }}",
    
    // Maximum file read size
    "read_max": {{ read_max }},
    
    // Maximum number of events per type to buffer
    "events_max": {{ events_max }},
    
    // Enable the schedule monitor
    "enable_monitor": {{ enable_monitor }},
    
    // Field used to identify the host running osquery (hostname, uuid)
    "host_identifier": "{{ host_identifier }}"
  },

  // Define a schedule of queries:
  "schedule": {
    // This is a simple example query that outputs basic system information.
    "system_info": {
      // The exact query to run.
      "query": "SELECT hostname, cpu_brand, physical_memory FROM system_info;",
      // The interval in seconds to run this query, not an exact interval.
      "interval": 3600
    },
    "file_events": {
      "query": "SELECT * from file_events;",
      "removed": false,
      "interval": 60
    }
  },

  // Decorators are normal queries that append data to every query.
  "decorators": {
    "load": [
      "SELECT uuid AS host_uuid FROM system_info;",
      "SELECT user AS username FROM logged_in_users ORDER BY time DESC LIMIT 1;"
    ]
  },

  // Add default osquery packs or install your own.
  //
  // There are several 'default' packs installed with 'make install' or via
  // packages and/or Homebrew.
  //
  // Linux:        /usr/share/osquery/packs
  // OS X:         /var/osquery/packs
  // Homebrew:     /usr/local/share/osquery/packs
  // make install: {PREFIX}/share/osquery/packs
  //
  "packs": {
    "osquery-monitoring": "/usr/share/osquery/packs/osquery-monitoring.conf",
    "incident-response": "/usr/share/osquery/packs/incident-response.conf",
    "it-compliance": "/usr/share/osquery/packs/it-compliance.conf",
    "osx-attacks": "/usr/share/osquery/packs/osx-attacks.conf",
    "vuln-management": "/usr/share/osquery/packs/vuln-management.conf",
    "hardware-monitoring": "/usr/share/osquery/packs/hardware-monitoring.conf"
  },
  
  // osquery.readthedocs.io/en/stable/deployment/configuration/#file-paths
  "file_paths": {
    "homes": [
      "/root/.ssh/%%",
      "/home/%/.ssh/%%"
    ],
    "etc": [
      "/etc/%%"
    ],
    "tmp": [
      "/tmp/%%"
    ]
  }
  // https://osquery.readthedocs.io/en/stable/deployment/file-integrity-monitoring/
  // Enabling this setting will disable file hashing.
  // "file_accesses": ["homes", "etc", "tmp"]
}
